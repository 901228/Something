# reload tmux
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.config/tmux/tmux.conf reloaded"

# mouse supports
set-option -g mouse on
set-option -g history-limit 102400

# other settings
set-option -g renumber-windows on

# tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# List of plugins
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -s default-terminal 'tmux-256color'

### status bar settings ###
set -g status-position top

# status bar
set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g @dracula-left-icon-padding 1
set -g @dracula-border-contrast true
set -g @dracula-show-empty-plugins true

# prefix highlight
set -g @prefix_highlight_fg 'white'
set -g @prefix_hightlight_bg 'blue'

# right prompts
set -g @dracula-plugins 'time synchronize-panes cpu-usage ram-usage'

# cpu usage
set -g @dracula-cpu-usage-label ' '

# time
set -g @dracula-show-timezone false
set -g @dracula-time-format '%m/%d %a %H:%M:%S  '
### end of status bar settings ###

### resurrect settings ###
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

set -g @resurrect-processes '~Vim -> vim'

# restore panes
set -g @resurrect-capture-pane-contents 'on'

# continuum
# set -g @continuum-restore 'on'

# start on boot
set -g @continuum-boot 'on'
### end of resurrect settings ###

# init tpm
run '~/.tmux/plugins/tpm/tpm'

### keybindings ###
# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# make pane as a standalone window
bind-key b break-pane -d

# choose-tree
bind-key j choose-tree -swZ
### end of key bindings ###

### vim-tmux-navigation ###
# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# bind key to send command of change tmux or nvim panel
        bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
        bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
        bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
        bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

        bind-key -T copy-mode-vi 'M-h' select-pane -L
        bind-key -T copy-mode-vi 'M-j' select-pane -D
        bind-key -T copy-mode-vi 'M-k' select-pane -U
        bind-key -T copy-mode-vi 'M-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
### end of vim-tmux-navigation ###

# change window via <prefix> + hl
        bind-key l next-window
        bind-key h previous-window
